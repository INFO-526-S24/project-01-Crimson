{
  "hash": "1a70e4bc56ff75667821a92f6e5e86bd",
  "result": {
    "markdown": "---\ntitle: \"Big Tech Stock Prices\"\nsubtitle: \"INFO 526 - Project 1\"\nauthor: \n  - name: \"Team Crimson - Arun, Varun, Jasdeep, Mohit, Pradnya\"\nformat: \n  html:\n    embed-resources: true\n    code-line-numbers: true\n    code-overflow: wrap\n    code-tools: true\neditor: visual\ncode-annotations: hover\ncategories: \n  - Data visualization\n  - TidyTuesday\n---\n\n\n## Abstract\n\nThis data visualization project aims to comprehend the patterns in the stock prices of major tech companies over a 10-year period. Given the inherent volatility of stock prices, various factors, including external disturbances, contribute to fluctuations. The project delves into comprehending the patterns in big tech company stock prices, particularly with respect to the impact of COVID-19. Our visualization techniques, including bar plots and line plots, play a crucial role in explaining the stock price phenomena.\n\nIn the second part of the project, we offer a more lucid understanding of stock price trends across financial quarters and weekdays. This insightful analysis empowers stakeholders with the information needed for informed decision-making and the formulation of proactive trading strategies.\n\n[*Note: Given that we only have access to stock prices, establishing causality regarding the impact of stock prices in relation to COVID-19 may pose challenges. So, instead we will be observing trends and returns.*]{style=\"font-size: small;\"}\n\n## Introduction\n\nThe [Big Tech Stock Prices dataset](https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-02-07), sourced from the TidyTuesday project, provides a comprehensive overview of the daily stock prices and trading volumes of 14 prominent technology companies. The list of industry giants that are studied for data analysis are Apple, Adobe, Amazon.com, Salesforce, Cisco Systems, Alphabet, IBM, Intel, Meta, Microsoft, Netflix, NVIDIA, Oracle and TESLA.\n\nComprising two tables, namely `big_tech_stock_prices.csv` and `big_tech_companies.csv`, this dataset offers a ample amount of information for conducting in-depth analysis and exploring various aspects of the stock market. The big_tech_stock_prices.csv file contains detailed records of daily stock prices and trading volumes for each company, while the big_tech_companies.csv file provides additional information about the included companies, such as their names and stock symbols.\n\n\\<\\<\\< Pending to write \\>\\>\n\n## Question 1 : Which companies have experienced the highest/lowest impact on their stock prices due to the pandemic?\n\n### Introduction\n\n\\<\\<\\< Team-1 to write \\>\\>\n\n### Approach\n\n\\<\\<\\< Team-1 to write \\>\\>\n\n### Analysis\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/graph1-1.png){fig-align='center' width=2400}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/graph2-1.png){fig-align='center' width=2400}\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/graph3-1.png){fig-align='center' width=2400}\n:::\n:::\n\n\n### Discussion\n\n\\<\\<\\< Team-1 to write \\>\\>\n\n## Question 2 : What are the patterns in returns on stock prices based on days of the week and financial quarters?\n\n### Introduction\n\n\\<\\<\\< Team-2 to write \\>\\>\n\n### Approach\n\n\\<\\<\\< Team-2 to write \\>\\>\n\n### Analysis\n\n\\<\\<\\< Team-2 to write \\>\\>\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](index_files/figure-html/q2_graph1-1.png){fig-align='center' width=768}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#| label: q2_graph2\n#| message: FALSE\n#| warning: FALSE\n#| echo: FALSE\n#| fig-width: 8\n#| fig-align: center\n\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(stringr)\nlibrary(gganimate)\n\n# Load data\nbig_tech_stock_prices <- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-07/big_tech_stock_prices.csv\")\nbig_tech_companies <- read.csv(\"https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-07/big_tech_companies.csv\")\n\nbig_tech_companies <- big_tech_companies |>\n  mutate(\n    CompanyName = str_replace(company, \" Inc\", \"\"),\n    CompanyName = if_else(stock_symbol == \"IBM\", \"IBM\", CompanyName),\n    CompanyName = str_replace(CompanyName, \",\", \"\"),\n    CompanyName = str_replace(CompanyName, \".com\", \"\"),\n    CompanyName = str_replace(CompanyName, \"\\\\.\", \"\"),\n    CompanyName = str_replace(CompanyName, \"Corporation\", \"\"),\n    CompanyName = str_replace(CompanyName, \"Systems\", \"\"),\n    CompanyName = str_replace(CompanyName, \"Platforms\", \"\"),\n    CompanyName = str_trim(CompanyName) \n  )\n\n# Merge data\nmerged_data <- inner_join(big_tech_stock_prices, big_tech_companies, by = \"stock_symbol\")\n\n# Group data by year and company and calculate cumulative sum of ClosingPrice\ngrouped_data <- merged_data |>\n  group_by(year = year(date), CompanyName) |>\n  summarize(ClosingPrice = mean(close)) |>\n  group_by(year) |>\n  mutate(CumulativeClosingPrice = cumsum(ClosingPrice)) |>\n  mutate(Rank = rank(CumulativeClosingPrice)) |>\n  mutate(RoundedCumulativeClosingPrice = round(CumulativeClosingPrice, 0)) |>\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'year'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\n# Order the companies based on cumulative ClosingPrice within each year\ngrouped_data <- grouped_data |>\n  arrange(desc(CumulativeClosingPrice)) |>\n  mutate(CompanyName = factor(CompanyName, levels = unique(CompanyName)))\n\nbar_color <- c(\"#A2AAAD\", \"#FF0000\", \"#FF9900\", \"#1798c1\", \"#00BCEB\", \"#34A853\", \"#0530AD\", \n         \"#0068B5\", \"#0668E1\", \"#F14F21\", \"#E50914\", \"#76B900\", \"#C74634\", \"#E31937\")\n\n# Plot\n# Plot\nanimated_plot <- ggplot(grouped_data) +\n  geom_col(aes(x = CumulativeClosingPrice,\n               y = fct_reorder(CompanyName, CumulativeClosingPrice),\n               fill = CompanyName),\n           width = 0.9) +\n  geom_text(aes(x = RoundedCumulativeClosingPrice, y = CompanyName, label = RoundedCumulativeClosingPrice ),\n            hjust = -0.02, vjust = 0.5) +\n  theme_minimal() +\n  theme(axis.text.y = element_text(size = 10),\n        axis.ticks.y = element_blank(),\n        plot.margin = unit(c(1, 1, 3, 1), 'lines'),\n        legend.position = \"none\",\n        panel.grid.major=element_blank(),\n        panel.grid.minor=element_blank(),\n        panel.grid.major.x = element_line( size=.01, color=\"grey\" )) +\n  labs(\n    x = \"Cumulative Closing Price\",\n    y = NULL\n  ) +\n  scale_x_continuous(breaks = seq(0, 4000,by = 500),limits = c(0, 4000)) +\n  ggtitle('Yearwise Closing Price of Big Tech Companies: {closest_state}') +\n  scale_fill_manual(values = bar_color) +\n  transition_states(year,\n                    transition_length = 1,\n                    state_length = 10)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `size` argument of `element_line()` is deprecated as of ggplot2 3.4.0.\nâ„¹ Please use the `linewidth` argument instead.\n```\n:::\n\n```{.r .cell-code}\n# View the animated plot\nanimated_plot\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/q2_graph2-1.gif)\n:::\n:::\n\n\n\n### Discussion\n\n\\<\\<\\< Team-2 to write \\>\\>\n\n## References\n\n\\<\\<\\< Most Important ; Update as we go \\>\\>\n\n-   https://stackoverflow.com/questions/10576095/formatting-dates-with-scale-x-date-in-ggplot2\n-   https://viz-ggplot2.rsquaredacademy.com/ggplot2-text-annotations\n-   \n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}