---
title: "Big Tech Stock Prices"
subtitle: "INFO 526 - Spring 2024 - Project 1"
author: "Team Crimson: Arun, Jasdeep, Mohit, Pradnya, Varun"
title-slide-attributes:
  data-background-image: images/background_presentation1.gif
  data-background-size: stretch
  data-background-opacity: "0.6"
  data-slide-number: none
format:
  revealjs:
    theme:  [simple,data/customtheming.scss]
    transition: slide
    background-transition: fade
    logo: images/stock_logo.png
    footer: "[ðŸ’² The Crimson](https://info-526-s24.github.io/project-01-Crimson/)"
    scrollable: true

editor: visual  
execute:
  warning: false
  echo: false
---

```{r load_packages, message=FALSE, include=FALSE}
# GETTING THE LIBRARIES
#devtools::install_github("choonghyunryu/dlookr")

if (!require(pacman))
  install.packages(pacman)

# Loading the libraries
pacman::p_load(tidyverse,
               tidytuesdayR,
               dlookr,
               ggthemes,
               ggplot2,
               gganimate,
               dplyr,
               ggridges,
               formattable,
               plotly,
               broom,
               cowplot,
               gifski,
               here,
               magick)
```

```{r ggplot_setup, message=FALSE, include=FALSE}
# Setting theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14, base_family = "sans"))

# Setting width of code output
options(width = 65)

# Setting figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 8,        # 8" width
  fig.asp = 0.618,      # the golden ratio
  fig.retina = 1,       # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 300             # higher dpi, sharper image
)
```

# The Rise and Fall: Historical Patterns in Big Tech Stock Prices

## Data Description {.smaller auto-animate="true"}

::: incremental
-   `Big Tech Stock Price` & `Big Tech Companies` datasets from [tidytuesday](https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-02-07).
-   Includes `open`, `close`, `high`, `low` and `adj_close` prices for company.
-   Data spans from 2010 to 2022, allowing for in-depth analysis and trends.
-   Our Data:
    -   `big_tech_companies` dataset
    -   `big_tech_stock_prices` dataset
:::

## Objective {auto-animate="true"}

::: columns
::: {.column width="70%"}
::: {style="font-size: 75%;"}
-   Delving into the performance of 14 leading tech companies, with a focus on understanding the influence of COVID-19.
-   **Question 1**: Which companies have experienced the highest/lowest impact on their stock prices due to the pandemic?
-   **Question 2**: What patterns do we see in the positive gain days over the given period?
:::
:::

::: {.column width="30%"}
![](images/slide1.png){fig-align="right" height="450" width="450"}
:::
:::

## Question 1 {.smaller}

**Which companies have experienced the highest/lowest impact on their stock prices due to the pandemic?**

::: incremental
::: columns
::: {.column width="30%"}
### Plot1

::: {style="font-size: 70%;"}
-   Depicts trends for all 14 companies using `geom_line`

-   Annotates with the COVID-19 period.

-   Highlights notable trends of Adobe and Netflix with distinct line colors.

-   Includes comments for better understanding.
:::
:::

::: {.column width="30%"}
### Plot2

::: {style="font-size: 70%;"}
-   Zooms into the period from 2018 to 2022.

-   Utilizes de-trending days plot based on 14 `linear models`.

-   Ratios calculated for insights on a standardized scale and plotted using `geom_line`

-   Facets maintain color patterns from the first plot.
:::
:::

::: {.column width="30%"}
### Plot3

::: {style="font-size: 70%;"}
-   Focuses on starting date (2018), 2020, and closing date (2022).

-   Extracts two-year and five-year returns for all companies and calculates average returns for all companies

-   `Bar plot` for descending two-year returns and five-year returns are plotted and then combined using `cowplot`
:::
:::
:::
:::

## Impact of Stock Prices around COVID-19

::: panel-tabset
### Plot1 {.smaller}

```{r load_data, message=FALSE, include=FALSE}
# Loading the data
big_tech_stock_prices <- read_csv(here("data","big_tech_stock_prices.csv"))
big_tech_companies <- read_csv(here("data","big_tech_companies.csv"))


# Data Pre-processing for both the questions
big_tech_companies <- big_tech_companies |>
  mutate(
    CompanyName = str_replace(company, " Inc", ""),
    CompanyName = if_else(stock_symbol == "IBM", "IBM", CompanyName),
    CompanyName = str_replace(CompanyName, ",", ""),
    CompanyName = str_replace(CompanyName, ".com", ""),
    CompanyName = str_replace(CompanyName, "\\.", ""),
    CompanyName = str_replace(CompanyName, "Corporation", ""),
    CompanyName = str_replace(CompanyName, "Systems", ""),
    CompanyName = str_replace(CompanyName, "Platforms", ""),
    CompanyName = str_trim(CompanyName) 
  )
```

```{r Plot_1, message=FALSE, echo=FALSE}
#| fig.asp: 0.5

plot1 <-  left_join(big_tech_stock_prices,big_tech_companies) |> 
          ggplot(aes(x = date, y = adj_close , color = CompanyName)) + 
          geom_line() +
          scale_colour_manual(name = "Company",
                              values = c("orange", "grey", "grey", "grey",
                                         "grey", "grey", "grey", "grey",
                                         "grey","brown", "grey", "grey",
                                         "grey", "grey")) +
          scale_x_date(breaks = seq(from = as.Date("2010-01-01"),
                                    to = as.Date("2022-01-01"),
                                    by = "2 years"),
                       minor_breaks = "1 year",
                       date_labels = "%Y") +
          scale_y_continuous(limits = c(0, 750)) +
          annotate(
            "text",
            x = as.Date("2020-03-17"),
            y = 620,
            label = "COVID-19 \n Pandemic",
            vjust = -0.5,  # Adjust vertical position of the label
            color = "cornsilk4",
            size = 3
          ) +
          geom_vline(
            xintercept = as.numeric(as.Date("2021-11-17")),
            linetype = "dashed",
            color = "darkgreen"
          ) +
          annotate(
            "text",
            x = as.Date("2021-11-17"),
            y = 620,
            label = "Lower Ad \n Revenue",
            vjust = -0.5,  # Adjust vertical position of the label
            color = "darkred",
            size = 3
          ) +
          geom_vline(
            xintercept = as.numeric(as.Date("2020-03-17")),
            linetype = "dashed",
            color = "darkgreen"
          ) +
          labs(
            x = "Year", 
            y = "Stock Price", 
            fill = NULL,
            title = ""
          ) + 
          theme_minimal() +
          theme(
            legend.position = c(0.10, 0.6),
            legend.box.background = element_rect(fill = "white",
                                                 color = "white"),
            legend.title = element_blank()
          ) +
          annotate(
            "text",
            x = as.Date("2015-05-17"),
            y = 300,
            label = "Highlighted companies in 2022 
            have faced internal challenges, 
            such as a slowdown in subscribers for Netflix
            and pricing factors affecting Adobe",
            vjust = -0.5,  # Adjust vertical position of the label
            color = "darkred",
            size = 3,
            fontface = "italic"
          ) +
          annotate(
            "text",
            x = as.Date("2016-11-17"),
            y = 500,
            label = "All tech companies have seen an initial fall 
            when COVID was declared a pandemic, 
            but later, during the quarantine, 
            the benefits of technology are conspicuous",
            vjust = -0.5,  # Adjust vertical position of the label
            color = "cornsilk4",
            size = 3, 
            fontface = "italic"
        )

plot1

```

### Plot2 {.smaller}

```{r Plot_2, message=FALSE, echo=FALSE}
#| fig.asp: 0.5

models <- big_tech_stock_prices |>
  group_by(stock_symbol) |>
  group_modify(~ augment(lm(adj_close ~ date, data = .))) |>
  mutate(ratio = adj_close /.fitted, .after = .fitted) |>
  select(stock_symbol,date,adj_close,ratio)


plot2 <- 
  left_join(models,big_tech_companies) |>
  ggplot(aes(x = date, y = ratio, color = CompanyName)) +
  geom_line() +
  scale_colour_manual(name = "Company",
                      values = c("orange", "grey", "grey","grey",
                                 "grey", "grey", "grey", "grey",
                                 "grey", "brown", "grey", "grey",
                                 "grey", "grey")) +
  geom_hline(yintercept = 1, color = "darkgreen") +
  scale_x_date(breaks = seq(from = as.Date("2010-01-01"),
                            to = as.Date("2023-01-01"),
                            by = "2 years"),
               minor_breaks = "1 year",
               date_labels = "%Y") + 
  coord_cartesian(ylim = c(0, 2) , 
                  xlim = c(as.Date("2018-01-01"), as.Date("2023-01-01"))) +
  labs(
    title = "Stock Price Changes over 5 Years",
    subtitle = "2018-2022 (Detrended)",
    x = "Year", 
    y = "Stock Price Ratio \n (detrended)"
  ) + 
  facet_wrap(~CompanyName) + 
  guides(color = "none") + 
  theme_minimal()

plot2
```

### Plot3 {.smaller}

```{r Plot_3, message=FALSE, echo=FALSE}
#| fig.asp: 0.5

dates = big_tech_stock_prices |> 
  group_by(year(date)) |> 
  summarize(min_date = min(date), max_date = max(date))

dates = c("2018-01-02","2020-01-02", "2022-12-29")

closings = big_tech_stock_prices |>
  filter(as.Date(date) %in% as.Date(dates)) |>
  mutate(year = year(date)) |> 
  select(stock_symbol, year, adj_close) |> 
  pivot_wider(names_from = stock_symbol, values_from = adj_close) |> 
  column_to_rownames(var = "year") |> 
  t() |>  
  as.data.frame() |> 
  rownames_to_column(var="stock_symbol") |> 
  mutate(
    Two_Years = round(((`2020` - `2018`)/`2018`)*100/2,2), 
    Five_Years = round(((`2022` - `2018`)/`2018`)*100/5,2)
  ) |> 
  select(stock_symbol, Two_Years, Five_Years) 


plot3 <- 
  left_join(closings, big_tech_companies) |> 
  ggplot(aes( x = reorder(CompanyName, Two_Years), Two_Years,
              fill = CompanyName)) + 
  scale_fill_manual(name = "Company",
                    values = c("orange", "#fde725", "#c2df23",
                               "#86d549", "#52c569","#2ab07f",
                               "#1e9b8a", "#25858e", "#2d708e",
                               "brown","#38588c", "#433e85",
                               "#482173", "#440154")) + 
  geom_bar(stat = "identity") + 
  geom_text(aes(label = sprintf("%.2f%%", Two_Years), y = 48),
              color = "brown4", size = 3, fontface = "bold") +
  coord_flip() + 
  labs(
    x = "Two Year Returns",
    y = "% Returns",
    title = "Avg. of two year returns %",
    subtitle = "2018 to 2020; Pre-Pandemic"
  ) +
  theme_minimal() + 
  guides(fill = "none") 
  

plot4 <- 
  left_join(closings,big_tech_companies) |> 
  ggplot(aes( x = reorder(CompanyName, Five_Years), Five_Years,
              fill = CompanyName)) + 
  scale_fill_manual(name = "Company", 
                    values = c("orange", "#fde725", "#c2df23", 
                               "#86d549", "#52c569","#2ab07f", 
                               "#1e9b8a", "#25858e", "#2d708e",
                               "brown","#38588c", "#433e85", 
                               "#482173", "#440154")) + 
  geom_bar(stat = "identity") + 
  geom_text(aes(label = sprintf("%.2f%%", Five_Years), y = 98),
              color = "brown4", size = 3, fontface = "bold") +
  coord_flip() + 
  labs(
    x = "Five Year Returns",
    y = "% Returns",
    title = "Avg. of five year returns %",
    subtitle = "2018 to 2023"
  ) +
  theme_minimal() + 
  guides(fill = "none")


cowplot::plot_grid(plot3,plot4, ncol = 2)

```
:::

## Discussion

::: {style="font-size: 75%;"}

-   Pandemic Impact on Winners and Losers (2022):
    -   Netflix and Adobe experienced significant declines.
    -   Factors: post-Covid-19 effects, sales slowdown, recession fears, internal issues, rising unemployment. Apple, Microsoft, and IBM showed resilience in 2022.
-   Long-Term Trends (Overall):
    -   Apple, Tesla, and Microsoft emerged as standout gainers.
    -   Tesla recorded the highest 5-year returns, surging from 17% to an impressive 94%.

:::

## Question 2: {.smaller}

**What patterns do we see in the positive gain days over the given period?**

::: incremental

::: columns

::: {.column width="50%"}

### Plot1:

::: {style="font-size: 75%;"}

-   Illustrate overall `gain-days` of all companies from 2010 to 2022 on a yearly basis.
-   Animated series of 12 `column` charts representing different companies.
-   Dynamic presentation reveals peaks and troughs of gain days across these years and utilizes `geom_text` to annotate the number of gain days for swift comprehension.

:::

:::

::: {.column width="50%"}

### Plot2:

::: {style="font-size: 75%;"}

-   Provide a deeper understanding of trading dynamics based on gain-days.
-   Gain-days grouped by quarter and weekday and averages of approximately 12 weekdays per quarter for consistency.
-   `Ridge density` plots visually articulate the spread and peaks of gains across weekdays.
-   Facilitates identification of specific days more favorable for trading in the context of individual tech companies.

:::

:::

:::

:::

## +Ve Gain Days Trading Strategies {.smaller}

::: panel-tabset

### Plot1

```{r Q2_Plot_1, message=FALSE}
# Merge data
merged_data <- inner_join(big_tech_stock_prices, big_tech_companies, by = "stock_symbol")

# Function to compute gain days
compute_gain_days <- function(x) {
  gain_days <- sum(x[-1] > x[-length(x)])
  return(gain_days)
}

# Group data by year and company, calculate gain days
grouped_data <- merged_data |>
  group_by(year = year(date), CompanyName) |>
  summarize(GainDays = compute_gain_days(close),.groups = "drop")

# Order the companies based on total gain days within each year
grouped_data <- grouped_data |>
  group_by(year) |>
  mutate(Rank = rank(-GainDays)) |>
  arrange(year, Rank) |>
  ungroup()

grouped_data <- grouped_data |>
  filter(year != 2023)

# Plot
bar_color <- c("orange", "#fde725", "#c2df23", "#86d549",
               "#52c569", "#2ab07f", "#1e9b8a", "#25858e",
               "#2d708e", "brown", "#38588c", "#433e85",
               "#482173", "#440154")

animated_plot <- ggplot(grouped_data) +
  geom_col(aes(x = GainDays,
               y = fct_reorder(CompanyName, GainDays),
               fill = CompanyName),
           width = 0.9) +
  geom_text(aes(x = GainDays, y = CompanyName, label = GainDays),
            hjust = -0.02, vjust = 0.5) +
  theme_minimal() +
  theme(axis.text.y = element_text(size = 10),
        axis.ticks.y = element_blank(),
        plot.margin = unit(c(1, 1, 3, 1), 'lines'),
        legend.position = "none",
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.grid.major.x = element_line( size=.01, color="grey" ),
        plot.title = element_text(size = 16, face = "bold")) +
  labs(
    x = "Gain Days",
    y = NULL
  ) +
  scale_x_continuous(breaks = seq(0, max(grouped_data$GainDays), by = 50)) +
  ggtitle('Yearwise Gain Days of Big Tech Companies: {closest_state}') +
  scale_fill_manual(values = bar_color) +
  transition_states(year,
                    transition_length = 7,
                    state_length = 1000)
```

```{r Q2_Plot_1_animate, message=FALSE}
#| fig.asp: 0.5


anim_save("data/animated_plot.gif", animated_plot,renderer = gifski_renderer())

# Load the animated GIF
plot_animation <- image_read("data/animated_plot.gif")

# Display the animation
plot_animation |>
  image_animate(fps = 5) 

```

### Plot2

```{r Q2_Plot_2, message=FALSE, echo=FALSE}
#| fig.height: 6
#| fig.width: 10
#| fig.asp: 0.5

# Calculate gain days
gain_days <- big_tech_stock_prices |>
  mutate(
    year = lubridate::year(date) ,
    quarter = lubridate::quarter(date),
    weekday = weekdays(date),
    gain = if_else(close - open > 0, 1, 0)
  ) |> 
  group_by(stock_symbol,year,quarter,weekday) |>
  summarise(gain_count = sum(gain), .groups = "drop")

weekday_order <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday")

company_colors <- c(
  "Adobe" = "orange", 
  "Alphabet" = "#fde725", 
  "Amazon" = "#c2df23", 
  "Apple" = "#86d549", 
  "Cisco" = "#52c569",
  "IBM" = "#2ab07f", 
  "Intel" = "#1e9b8a", 
  "Meta" = "#25858e", 
  "Microsoft" = "#2d708e",
  "Netflix" = "brown",
  "NVIDIA" = "#38588c", 
  "Oracle" = "#433e85", 
  "Salesforce" = "#482173", 
  "Tesla" = "#440154"
)

# Join the data and Plot density ridges
left_join(gain_days,big_tech_companies) |>
  ggplot(aes(x = gain_count,
             y = factor(weekday, levels = weekday_order),
             fill = CompanyName)) +
  geom_density_ridges(scale = 3, rel_min_height = 0.01, alpha = 0.7) +
  scale_fill_manual(values = company_colors) +
  labs(title = "Distribution of Gain Days by Weekday",
       subtitle = "Averaged per Quarter in last 10 years",
       x = NULL,
       y = NULL) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.line = element_line(color = "black"),
        plot.title = element_text(size = 16, face = "bold"),
        axis.title = element_text(size = 12, face = "bold"),
        legend.position = "none") +
  coord_cartesian(xlim = c(0, 12)) + facet_wrap(~ CompanyName)
```

:::

## Discussion

::: {style="font-size: 75%;"}

-   Leveraging Positive Gain Days:
    -   Examining positive gain days across weekdays.
    -   Short-term investors can strategically align with historical performance.
-   Optimizing Trading Strategies:
    -   Incorporates return patterns and positive gain day distributions.
    -   Empowers traders with insights for effective day and weekly strategies.
    -   Graphs serve as valuable tools in the dynamic stock market landscape.

:::

::: {style="text-align: center;"}

# THANK YOU

:::
